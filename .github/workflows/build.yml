name: Build
on:
  - pull_request
jobs:
  build-ts:
    name: Typescript Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - run: yarn install
        name: Install dependencies
      - run: yarn run biome ci --linter-enabled=true .
        name: Lint check
      - run: yarn run biome ci --formatter-enabled=true --organize-imports-enabled=true .
        name: Format check
      - run: yarn build
        name: Build
      - name: Temporary Typescript build app artifact
        uses: actions/upload-artifact@v2
        with:
          name: typescript-build-artifact
          path: dist
  build-docker:
    name: Docker Build&Publish
    runs-on: ubuntu-latest
    needs: build-ts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Retrieve Typescript build artifact
        uses: actions/download-artifact@v2
        with:
          name: typescript-build-artifact
          path: dist
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Configure GCP Credentials
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - name: Configure GCloud Auth provider with Docker
        run: |
            gcloud auth configure-docker "${{ vars.DOCKER_ARTIFACT_REGISTRY }}"
      - name: build
        run: docker build -t ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }} .
      - name: tag
        run: |
            docker tag ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }} \
            ${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
            ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
            ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
            ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }}
      - name: publish
        run: |
            docker push ${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
            ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
            ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
            ${{ github.event.repository.name }}:${{ env.COMMIT_SHORT_SHA }}
  helm-deploy:
    name: Helm Deploy
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Configure GCP Credentials
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - name: Get GKE credentials
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ vars.GKE_CLUSTER_NAME }}"
          location: "${{ vars.GKE_LOCATION }}"
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Helm Deploy
        run: |
          helm upgrade --install ${{ github.event.repository.name }} \
          --set image.tag=${{ env.COMMIT_SHORT_SHA }} \
          --set image.repository=${{ vars.DOCKER_ARTIFACT_REGISTRY }}/\
          ${{ vars.DOCKER_ARTIFACT_PROJECT}}/\
          ${{ vars.DOCKER_ARTIFACT_REPOSITORY }}/\
          ${{ github.event.repository.name }} \
          --wait \
          ./chart
